@tailwind base;
@tailwind components;
@tailwind utilities;

/* simply by composing all these Tailwind classes
together into this one new input class.
So this looks really nice and helpful, right?
But that doesn't mean that we should start using
this technique all over the place now
because basically if we started to doing this
for all our elements,
then we would simply go back to writing CSS
in the old school way.
So being back to writing classes and then applying
those classes, so that's what we did before
and so then there would be no point
in using Tailwind in the first place.
So this should really be treated
as an exception here when there are so many classes
that we are using all at the same time, like this year
and when we do not want to create a new component
because the actual better solution would be to reuse
all of this by creating a React component.
So for example, creating an input component
which we could then reuse here
in all these different places, */

@layer components {
  .input {
    @apply w-full rounded-full border border-y-stone-200 px-4 py-2 text-sm transition-all duration-300 placeholder:text-stone-400 focus:outline-none focus:ring focus:ring-yellow-400 md:px-6 md:py-3;
  }
}

/* https://dev.to/afif/i-made-100-css-loaders-for-your-next-project-4eje */
.loader {
  width: 45px;
  aspect-ratio: 0.75;
  --c: no-repeat linear-gradient(#333 0 0);
  background:
    var(--c) 0% 50%,
    var(--c) 50% 50%,
    var(--c) 100% 50%;
  background-size: 20% 50%;
  animation: loading 1s infinite linear;
}

@keyframes loading {
  20% {
    background-position:
      0% 0%,
      50% 50%,
      100% 50%;
  }
  40% {
    background-position:
      0% 100%,
      50% 0%,
      100% 50%;
  }
  60% {
    background-position:
      0% 50%,
      50% 100%,
      100% 0%;
  }
  80% {
    background-position:
      0% 50%,
      50% 50%,
      100% 100%;
  }
}
